<?xml version="1.0" encoding="UTF-8"?>
<Graph author="jdeoliveira" created="Fri May 25 18:41:14 GMT-03:00 2012" guiVersion="3.3.0.M2" id="1338072844436" licenseCode="Unlicensed" licenseType="Unknown" modified="Fri May 25 18:41:14 GMT-03:00 2012" modifiedBy="jdeoliveira" name="Van Gogh Paint to canonical JSON" revision="1.0" showComponentDetails="false">
<Global>
<Metadata __sourcePath="{}/object" _dataStructure="OBJECT" _id="__id" _type="Output" id="Metadata1">
<Record fieldDelimiter="|" name="object" recordDelimiter="&#10;" type="delimited">
<Field __artificialType="_id" __systemManaged="true" name="__id" type="string"/>
<Field __sourcePath="{}/object/productId" label="productId" name="productId" type="string"/>
<Field __sourcePath="{}/object/productDescription" label="productDescription" name="productDescription" type="string"/>
<Field __sourcePath="{}/object/providerId" label="providerId" name="providerId" type="string"/>
<Field __sourcePath="{}/object/price" label="price" name="price" type="string"/>
</Record>
</Metadata>
<Metadata __sourcePath="{}/object" _dataStructure="OBJECT" _id="__id" _type="Input" id="Metadata0">
<Record fieldDelimiter="|" name="Product" recordDelimiter="&#10;" type="delimited">
<Field __artificialType="_id" __systemManaged="true" name="__id" type="string"/>
<Field __sourcePath="{}/object/brand" label="brand" name="brand" type="string"/>
<Field __sourcePath="{}/object/color" label="color" name="color" type="string"/>
<Field __sourcePath="{}/object/price" label="price" name="price" type="number"/>
<Field __sourcePath="{}/object/upcCode" label="upcCode" name="upcCode" type="string"/>
</Record>
</Metadata>
<Dictionary>
<Entry id="DictionaryEntry0" input="true" name="inputPayload" output="false" type="object"/>
<Entry id="DictionaryEntry1" input="false" name="outputPayload" output="true" type="object"/>
</Dictionary>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="dict:inputPayload" guiHeight="0" guiName="JAVA Reader" guiWidth="0" guiX="20" guiY="20" id="BEAN_READER0" type="BEAN_READER">
<attr name="mapping"><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Context outPort="0" sequenceField="__id" xpath=".">
  <Mapping cloverField="brand" trim="true" xpath="brand"/>
  <Mapping cloverField="color" trim="true" xpath="color"/>
  <Mapping cloverField="price" trim="true" xpath="price"/>
  <Mapping cloverField="upcCode" trim="true" xpath="upcCode"/>
</Context>
]]></attr>
<attr name="_data_format"><![CDATA[JAVA]]></attr>
<attr name="schema"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<schema-object>
  <typed-object-ref type-ref="com.mulesoft.example.estore.clients.provider.vangoghpaintstore.Product"/>
  <typed-object type="java.lang.String"/>
  <typed-object type="float"/>
  <typed-object type="com.mulesoft.example.estore.clients.provider.vangoghpaintstore.Product">
    <typed-object-ref name="brand" type-ref="java.lang.String"/>
    <typed-object-ref name="color" type-ref="java.lang.String"/>
    <typed-object-ref name="price" type-ref="float"/>
    <typed-object-ref name="upcCode" type-ref="java.lang.String"/>
  </typed-object>
</schema-object>
]]></attr>
</Node>
<Node charset="UTF-8" enabled="enabled" fileURL="dict:outputPayload" guiHeight="0" guiName="JSON Writer" guiWidth="0" guiX="460" guiY="20" id="JSON_WRITER0" type="JSON_WRITER">
<attr name="mapping"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<object xmlns:clover="http://www.cloveretl.com/ns/xmlmapping" clover:inPort="0">
  <productId>$0.productId</productId>
  <productDescription>$0.productDescription</productDescription>
  <providerId>$0.providerId</providerId>
  <price>$0.price</price>
</object>]]></attr>
<attr name="_data_format"><![CDATA[JSON]]></attr>
</Node>
<Node enabled="enabled" guiHeight="0" guiName="object_to_object" guiWidth="0" guiX="240" guiY="20" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.productId = $in.0.upcCode;
	$out.0.providerId =  "Van Gogh's Paint Store";
	
	$out.0.productDescription =  $in.0.brand + " / " + $in.0.color;
	
	
	
$out.0.__id=$in.0.__id;
	$out.0.price=(isnull($in.0.price) ? "" : num2str($in.0.price));
		return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge fromNode="BEAN_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="REFORMAT0:0"/>
<Edge fromNode="REFORMAT0:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="JSON_WRITER0:0"/>
</Phase>
</Graph>
